# config.yaml
prowjob_namespace: default
pod_namespace: test-pods

plank:
  job_url_template: 'https://prow.bashfire.dev/view/gcs/bashfire-prow/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_templates:
    '*': '[Full PR test history](https://prow.bashfire.dev/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://prow.k8s.io/pr?query=is%3Apr%20state%3Aopen%20author%3A{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  job_url_prefix_config:
    '*': https://prow.bashfire.dev/view/gcs/
  pod_pending_timeout: 15m
  pod_unscheduled_timeout: 1m
  default_decoration_configs:
    '*':
      timeout: 2h
      grace_period: 15s
      utility_images:
        clonerefs: "gcr.io/k8s-prow/clonerefs:v20200423-af610499d"
        initupload: "gcr.io/k8s-prow/initupload:v20200423-af610499d"
        entrypoint: "gcr.io/k8s-prow/entrypoint:v20200423-af610499d"
        sidecar: "gcr.io/k8s-prow/sidecar:v20200423-af610499d"
      gcs_configuration:
        bucket: bashfire-prow
        path_strategy: explicit
      # prow-build-test@kubernetes-public.iam.gserviceaccount.com on kubernetes-public/prow-build-test
      gcs_credentials_secret: service-account # in test-pods namespace

sinker:
  resync_period: 1m
  max_prowjob_age: 12h
  max_pod_age: 12h
  terminated_pod_ttl: 30m

github_reporter:
  job_types_to_report:
  - presubmit
  - postsubmit

branch-protection:
  orgs:
    bashfire:
      protect: true

tide:
  sync_period: 1m
  queries:
  - orgs:
    - bashfire
    labels:
    - lgtm
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
  pr_status_base_urls:
    '*': https://prow.bashfire.dev/pr

deck:
  branding:
    logo: 'http://storage.googleapis.com/bashfire-prow/bashfire.png'
    favicon: 'http://storage.googleapis.com/bashfire-prow/bashfire.ico'
    header_color: '#212121'
  spyglass:
    size_limit: 200000000 # 200MB
    gcs_browser_prefix: https://gcsweb.bashfire.dev/gcs/
    lenses:
    - lens:
        name: metadata
      required_files:
      - started.json|finished.json
      optional_files:
      - podinfo.json
    - lens:
        name: buildlog
      required_files:
        - build-log.txt
    - lens:
        name: junit
      required_files:
        - artifacts/junit.*\.xml
    - lens:
        name: coverage
      required_files:
        - artifacts/filtered.cov
      optional_files:
        - artifacts/filtered.html
    - lens:
        name: podinfo
      required_files:
        - podinfo.json
  tide_update_period: 1s
  rerun_auth_configs:
    '*':
      github_users:
      - spiffxp

presets:
# enable GOPROXY by default
- env:
  - name: GOPROXY
    value: "https://proxy.golang.org"
# TODO: ssh access?
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      # TODO: see if we can use OS login instead of this
      #   corresponds to a manually created ssh key
      #   added to project-wide ssh-keys for e2e projects during project creation
      #   on kubernetes-public/prow-build-test
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  # storage e2e tests borrow this as a preconfigured key instead of creating and
  # injecting a new key. this allows us to avoid mass key download warnings
  - name: E2E_GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  - name: GOOGLE_APPLICATION_CREDENTIALS_DEPRECATED
    value: "Migrate to workload identity, contact sig-testing"
  volumes:
  - name: service
    secret:
      # spiffxp-gke-dev-prow@spiffxp-gke-dev.iam.gserviceaccount.com spiffxp-gke-dev/prow
      # prow-build-test@kubernetes-public.iam.gserviceaccount.com on kubernetes-public/prow-build-test
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true

periodics:
- name: ci-kubernetes-node-kubelet
  interval: 12h
  annotations:
    fork-per-release: "true"
    fork-per-release-periodic-interval: 1h 2h 6h 24h
    testgrid-dashboards: sig-release-master-blocking, sig-node-kubelet
    testgrid-tab-name: node-kubelet-master
    testgrid-alert-email: kubernetes-sig-node+testgrid@googlegroups.com
    description: "Uses kubetest to run a subset of node-e2e tests (+NodeConformance, -Flaky|Serial)"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200422-8c8546d-master
      args:
      # NOTE: override default of kubernetes-jenkins
      - --upload=gs://bashfire-prow/logs
      - --repo=k8s.io/kubernetes=master
      - --timeout=200
      - --root=/go/src
      - --scenario=kubernetes_e2e
      - --
      - --deployment=node
      - --gcp-project=spiffxp-node-e2e-project
      - --gcp-zone=us-central1-b
      - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
      - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/"
      - --node-tests=true
      - --provider=gce
      - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Serial\]"
      - --timeout=180m
      env:
      - name: GOPATH
        value: /go

- interval: 12h
  name: ci-kubernetes-e2e-gci-gce
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      # NOTE: override default of kubernetes-jenkins
      - --upload=gs://bashfire-prow/logs
      - --timeout=300
      - --bare
      - --scenario=kubernetes_e2e
      - --
      - --gcp-project=spiffxp-gce-project
      - --check-leaked-resources
      - --env=ENABLE_POD_SECURITY_POLICY=true
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=4
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      # - --publish=gs://kubernetes-release-dev/ci/latest-green.txt
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=200m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20200423-9bf074a-master
  annotations:
    testgrid-dashboards: sig-release-master-blocking, google-gce, google-gci
    testgrid-tab-name: gce-cos-master-default
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-email: kubernetes-release-team@googlegroups.com
    description: Uses kubetest to run e2e tests (-Slow|Serial|Disruptive|Flaky|Feature) against a cluster created with cluster/kube-up.sh

- interval: 12h
  name: ci-bootstrap-debug
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20200423-9bf074a-master
      command:
        - /bin/bash
        - -c
        - |
          set -o errexit
          set -o nounset
          set -o pipefail

          gcloud config list
          echo
          env
          echo
          ls -l /etc
          echo
          ls -l /etc/ssh-key-secret
          echo
          cat /etc/ssh-key-secret/ssh-public

          exit
